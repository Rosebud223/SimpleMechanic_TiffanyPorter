{"_id":"com.unity.ai.navigation","name":"com.unity.ai.navigation","description":"The AI Navigation package contains high-level components that allow you to use navmeshes to incorporate navigation and pathfinding in your game. With this package installed you can build and use navmeshes at runtime and at edit time, create dynamic obstacles, and use links to allow specific actions (like jumping) as your characters navigate between navmeshes.","provider":"upm","versions":{"2.0.6":{"_upm":{"changelog":"### Added\n* New **OffMesh Link Converter** tool in the **Window** > **AI** > **Navigation Updater** window to help you automatically replace **OffMesh Links** with **NavMesh Links** in the scenes and prefabs of your project.\n\n### Fixed\n* Fixed a regression that caused controls in the navigation scene view overlay popup to display on top of one another when foldouts were open. (Requires Unity 6000.0.22f1 or newer)\n* The AI Navigation overlay was rarely needed upon the initial installation of the package. Now it is hidden by default and you can enable it through the [Overlay Menu](https://docs.unity3d.com/Manual/display-and-hide-overlay.html).\n* Fixed a regression that caused the Editor to allocate unnecessary memory on some platforms, when the project contained package test files."},"unity":"2023.2","samples":[{"path":"Samples~","description":"A set of examples on how to build and use a dynamic navigation space made of NavMesh surfaces and segment-to-segment connections.","displayName":"Build And Connect NavMesh Surfaces"}],"unityRelease":"0a18","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.ai.navigation@2.0/manual/index.html","name":"com.unity.ai.navigation","version":"2.0.6","displayName":"AI Navigation","description":"The AI Navigation package contains high-level components that allow you to use navmeshes to incorporate navigation and pathfinding in your game. With this package installed you can build and use navmeshes at runtime and at edit time, create dynamic obstacles, and use links to allow specific actions (like jumping) as your characters navigate between navmeshes.","keywords":["carving","mesh","navigation","navmesh","NavMesh","navmesh agent","navmesh link","navmeshlink","navmesh modifier","navmeshmodifier","navmesh modifier volume","navmeshmodifiervolume","navmesh obstacle","navmesh surface","navmeshsurface","offmesh link","off-mesh link","pathfinding"],"dependencies":{"com.unity.modules.ai":"1.0.0"},"dist":{"shasum":"c74b2724ed42c1aa0380e294156d7f54a7ae2ec6","tarball":"https://download.packages.unity.com/com.unity.ai.navigation/-/com.unity.ai.navigation-2.0.6.tgz"}},"2.0.5":{"_upm":{"changelog":"### Fixed\n* NavMesh Link would not update when switching from the **Not Walkable** area type to any other area type in the inspector. (NAVB-87)\n* A few documentation paragraphs and links were not accurate."},"unity":"2023.2","samples":[{"path":"Samples~","description":"A set of examples on how to build and use a dynamic navigation space made of NavMesh surfaces and segment-to-segment connections.","displayName":"Build And Connect NavMesh Surfaces"}],"unityRelease":"0a18","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.ai.navigation@2.0/manual/index.html","name":"com.unity.ai.navigation","version":"2.0.5","displayName":"AI Navigation","description":"The AI Navigation package contains high-level components that allow you to use navmeshes to incorporate navigation and pathfinding in your game. With this package installed you can build and use navmeshes at runtime and at edit time, create dynamic obstacles, and use links to allow specific actions (like jumping) as your characters navigate between navmeshes.","keywords":["carving","mesh","navigation","navmesh","NavMesh","navmesh agent","navmesh link","navmeshlink","navmesh modifier","navmeshmodifier","navmesh modifier volume","navmeshmodifiervolume","navmesh obstacle","navmesh surface","navmeshsurface","offmesh link","off-mesh link","pathfinding"],"dependencies":{"com.unity.modules.ai":"1.0.0"},"dist":{"shasum":"9f76b145f0a8dd734ff2a4877f7f7edb83b7f62c","tarball":"https://download.packages.unity.com/com.unity.ai.navigation/-/com.unity.ai.navigation-2.0.5.tgz"}},"2.0.4":{"_upm":{"changelog":"### Fixed\n* NavMesh Modifier was not overriding the area type in a NavMesh built from within an `Awake()` method ([NAVB-39](https://issuetracker.unity3d.com/issues/building-navmesh-with-navmeshsurface-does-not-bake-areas-into-navmeshtriangulation-when-buildnavmesh-is-called-in-awake))"},"unity":"2023.2","upmCi":{"footprint":"23ba53d0f49f4eb41874ed129edfc2c53ea54f28"},"samples":[{"path":"Samples~","description":"A set of examples on how to build and use a dynamic navigation space made of NavMesh surfaces and segment-to-segment connections.","displayName":"Build And Connect NavMesh Surfaces"}],"repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.ai.navigation.git","type":"git","revision":"2c565f88d424bed980de32ead5a48791e9db9936"},"unityRelease":"0a18","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.ai.navigation@2.0/manual/index.html","name":"com.unity.ai.navigation","version":"2.0.4","displayName":"AI Navigation","description":"The AI Navigation package contains high-level components that allow you to use navmeshes to incorporate navigation and pathfinding in your game. With this package installed you can build and use navmeshes at runtime and at edit time, create dynamic obstacles, and use links to allow specific actions (like jumping) as your characters navigate between navmeshes.","keywords":["carving","mesh","navigation","navmesh","NavMesh","navmesh agent","navmesh link","navmeshlink","navmesh modifier","navmeshmodifier","navmesh modifier volume","navmeshmodifiervolume","navmesh obstacle","navmesh surface","navmeshsurface","offmesh link","off-mesh link","pathfinding"],"dependencies":{"com.unity.modules.ai":"1.0.0"},"dist":{"shasum":"3f89ad87253dcaae2d0bb583bd5ef4c4f2c17764","tarball":"https://download.packages.unity.com/com.unity.ai.navigation/-/com.unity.ai.navigation-2.0.4.tgz"}},"2.0.3":{"_upm":{"changelog":"### Changed\n* The ends of the NavMesh Link are solely determined by the Transforms they reference. If a link's end doesn't reference a Transform, it is placed in the scene according to the local Point position set for it. This differs from version 2.0.0 where the Point was used together with, and relative to, the end's Transform, which always pointed to some GameObject. NavMesh Links saved using version 2.0.0 will now find their endpoints in different positions compared to where they would be in version 2.0.0. NavMesh Links saved with versions earlier than 2.0.0 remain unaffected and will continue to function with their existing data as they used to.\n* NavMesh Links saved with version 2.0.0 upgrade automatically to the correct format. Any link endpoint that has previously been defined by a position relative to a GameObject will now reference a new GameObject created as a child of the original transform and moved to the same world position that the endpoint had before.\n* To modify the cost of an individual NavMesh Link you can now select \"Cost Override\" in the Inspector and then input the new value. NavMesh Links that are saved with this version cannot be loaded correctly with earlier versions of the package.\n* Improved the user manual pages that describe the NavMesh Link and the NavMesh Surface components.\n\n### Fixed\n* Fixed navigation objects created from the GameObject menu being created in the scene instead of a prefab hierarchy when in prefab isolation mode.\n* Fixed creation of navigation objects from the GameObject menu resulting in more than one operation on the undo stack.\n* In accordance with other workflows, creating navigation objects from the GameObject menu now places them directly at the parent's position, instead of at the center of the scene view, when a parent is selected.\n* Fixed regression whereby changing NavMeshLink activated or cost modifier properties in the Inspector would not update the link while in play mode.\n* Added missing tooltips and support for localization throughout Inspector UI.\n* The Navigation window was sometimes issuing errors related to the .png file used as icon.\n* Added a cleanup step for Navigation components static data, so that the components support entering play mode without any domain reload.\n* Fixed warnings in the console when undoing creation of navigation objects from the GameObject menu.\n* Swapping the start and end points of a NavMeshLink via the Inspector now supports undo and redo.\n* Moving the GameObject via the Re-center operation in the NavMesh Link Inspector now supports undo and redo.\n* The deprecated properties `autoUpdatePositions`, `biDirectional`, `costOverride` and the deprecated `UpdatePositions` method of NavMeshLink correctly map now one-to-one to the members `autoUpdate`, `bidirectional`, `costModifier` and `UpdateLink`. This change removes any values that were stored by a serialized object specifically for the deprecated properties.\n* Updated the use of several methods that have been moved between classes as of 2023.3.\n* Added missing documentation for method parameters in `NavMeshComponentsGUIUtility`."},"type":"assets","unity":"2023.2","upmCi":{"footprint":"ddb78878f926974090e5cb83c7575c7c833d23c2"},"samples":[{"path":"Samples~","description":"A set of examples on how to build and use a dynamic navigation space made of NavMesh surfaces and segment-to-segment connections.","displayName":"Build And Connect NavMesh Surfaces"}],"repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.ai.navigation.git","type":"git","revision":"cf829f57201ee0f688f003e20879cb7651804388"},"unityRelease":"0a18","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.ai.navigation@2.0/manual/index.html","name":"com.unity.ai.navigation","version":"2.0.3","displayName":"AI Navigation","description":"The AI Navigation package contains high-level components that allow you to use navmeshes to incorporate navigation and pathfinding in your game. With this package installed you can build and use navmeshes at runtime and at edit time, create dynamic obstacles, and use links to allow specific actions (like jumping) as your characters navigate between navmeshes.","keywords":["carving","mesh","navigation","navmesh","NavMesh","navmesh agent","navmesh link","navmeshlink","navmesh modifier","navmeshmodifier","navmesh modifier volume","navmeshmodifiervolume","navmesh obstacle","navmesh surface","navmeshsurface","offmesh link","off-mesh link","pathfinding"],"dependencies":{"com.unity.modules.ai":"1.0.0"},"dist":{"shasum":"77c4f088a6d6359f8000ae02db777b4acb5a0f55","tarball":"https://download.packages.unity.com/com.unity.ai.navigation/-/com.unity.ai.navigation-2.0.3.tgz"}},"2.0.0":{"_upm":{"changelog":"### Fixed\n* When the \"Auto Update Position\" option of NavMeshLink is enabled, the link now correctly updates the connection in the next frame after any of the link's ends change their world position."},"type":"assets","unity":"2023.2","upmCi":{"footprint":"af35a045ea785c38d5dcb79bf03b7652fcd09bc3"},"samples":[{"path":"Samples~","description":"A set of examples on how to build and use a dynamic navigation space made of NavMesh surfaces and segment-to-segment connections.","displayName":"Build And Connect NavMesh Surfaces"}],"repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.ai.navigation.git","type":"git","revision":"365db7071a1efdbf9fc337dd1c0de02f909cd685"},"unityRelease":"0a18","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.ai.navigation@2.0/manual/index.html","name":"com.unity.ai.navigation","version":"2.0.0","displayName":"AI Navigation","description":"High-level NavMesh components for building and using NavMeshes at runtime and at edit time.","dependencies":{"com.unity.modules.ai":"1.0.0"},"dist":{"shasum":"f6367599281e08d75acc8229ad70ac03cfe57ac1","tarball":"https://download.packages.unity.com/com.unity.ai.navigation/-/com.unity.ai.navigation-2.0.0.tgz"}},"1.1.5":{"_upm":{"changelog":"### Fixed\n* Long warning popping up when user starts playmode while editing a prefab that contains NavMesh components ([NAVB-47](https://issuetracker.unity3d.com/product/unity/issues/guid/NAVB-47))"},"type":"assets","unity":"2022.2","upmCi":{"footprint":"dc776759d09fcac9d8e5fc2c4e57c920ef56522a"},"samples":[{"path":"Samples~","description":"A set of examples on how to build and use a dynamic navigation space made of NavMesh surfaces and segment-to-segment connections.","displayName":"Build And Connect NavMesh Surfaces"}],"repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.ai.navigation.git","type":"git","revision":"a905e1ab41c8afae1a75688ceb3b4dfa1686ea75"},"unityRelease":"0a16","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.ai.navigation@1.1/manual/index.html","name":"com.unity.ai.navigation","version":"1.1.5","displayName":"AI Navigation","description":"High-level NavMesh components for building and using NavMeshes at runtime and at edit time.","dependencies":{"com.unity.modules.ai":"1.0.0"},"dist":{"shasum":"f5dd6f5e8f9e9bf808358068d8116d1d35f9bcf4","tarball":"https://download.packages.unity.com/com.unity.ai.navigation/-/com.unity.ai.navigation-1.1.5.tgz"}},"2.0.0-pre.4":{"_upm":{"changelog":"### Fixed\n* Long warning popping up when user starts playmode while editing a prefab that contains NavMesh components ([NAVB-47](https://issuetracker.unity3d.com/product/unity/issues/guid/NAVB-47))"},"type":"assets","unity":"2023.2","upmCi":{"footprint":"d07337eaf10d272eb0753e6b020754d94e963b90"},"samples":[{"path":"Samples~","description":"A set of examples on how to build and use a dynamic navigation space made of NavMesh surfaces and segment-to-segment connections.","displayName":"Build And Connect NavMesh Surfaces"}],"repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.ai.navigation.git","type":"git","revision":"35c9c6c6a7084c523ee1cbc3e8c735bb007fec88"},"unityRelease":"0a18","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.ai.navigation@2.0/manual/index.html","name":"com.unity.ai.navigation","version":"2.0.0-pre.4","displayName":"AI Navigation","description":"High-level NavMesh components for building and using NavMeshes at runtime and at edit time.","dependencies":{"com.unity.modules.ai":"1.0.0"},"dist":{"shasum":"58b7bbc72d80223e21b6c5c8f29c4ae67dfb14d5","tarball":"https://download.packages.unity.com/com.unity.ai.navigation/-/com.unity.ai.navigation-2.0.0-pre.4.tgz"}},"1.1.4":{"_upm":{"changelog":"### Fixed\n* Published the missing API reference documentation for the new properties that were made available in 1.1.0"},"type":"assets","unity":"2022.2","upmCi":{"footprint":"f9e57c5c56fe9bc39ef6ee25b8798b15aa007eba"},"samples":[{"path":"Samples~","description":"A set of examples on how to build and use a dynamic navigation space made of NavMesh surfaces and segment-to-segment connections.","displayName":"Build And Connect NavMesh Surfaces"}],"repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.ai.navigation.git","type":"git","revision":"3e8d494400ccac6cbd90ee1b474470f4b1299bfa"},"unityRelease":"0a16","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.ai.navigation@1.1/manual/index.html","name":"com.unity.ai.navigation","version":"1.1.4","displayName":"AI Navigation","description":"High-level NavMesh components for building and using NavMeshes at runtime and at edit time.","dependencies":{"com.unity.modules.ai":"1.0.0"},"dist":{"shasum":"21fb51404b548cbdc63acb27dc5d05d84b793aee","tarball":"https://download.packages.unity.com/com.unity.ai.navigation/-/com.unity.ai.navigation-1.1.4.tgz"}},"2.0.0-pre.3":{"_upm":{"changelog":"### Added\n* New `activated` property in NavMeshLink, useful to control whether agents are allowed to traverse the link\n* New `occupied` property in NavMeshLink, useful to determine whether an agent is using the link\n* New `startTransform`, `endTransform` properties in NavMeshLink, useful to define the ends of the link through Transform references as an alternative to points in 3D space\n* New `autoUpdatePositions`, `biDirectional`, `costOverride` properties and the `UpdatePositions()` method, introduced as \"deprecated\" in order to facilitate the upgrade from OffMeshLinks\n\n### Changed\n* The `costModifier` property is now of type `float`, as expected by the Navigation system.\n\n### Fixed\n* Published the missing API reference documentation for the properties made available with 2022.2"},"type":"asset","unity":"2023.2","upmCi":{"footprint":"e3b954d5483b616fe10967f088d4d69c271ce76f"},"samples":[{"path":"Samples~","description":"A set of examples on how to build and use a dynamic navigation space made of NavMesh surfaces and segment-to-segment connections.","displayName":"Build And Connect NavMesh Surfaces"}],"repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.ai.navigation.git","type":"git","revision":"194bbf27b78d76ea91253e6012b8b01e6be5de94"},"unityRelease":"0a18","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.ai.navigation@2.0/manual/index.html","name":"com.unity.ai.navigation","version":"2.0.0-pre.3","displayName":"AI Navigation","description":"High-level NavMesh components for building and using NavMeshes at runtime and at edit time.","dependencies":{"com.unity.modules.ai":"1.0.0"},"dist":{"shasum":"b5b4ad75ba4c4da2a13ac0e2df4d88642be64bf5","tarball":"https://download.packages.unity.com/com.unity.ai.navigation/-/com.unity.ai.navigation-2.0.0-pre.3.tgz"}},"1.1.3":{"_upm":{"changelog":"### Changed\n* Remove some unnecessary files from the package"},"type":"asset","unity":"2022.2","upmCi":{"footprint":"b103ad1a03d3526d9ff50e0120f2a8e80c57a9e4"},"samples":[{"path":"Samples~","description":"A set of examples on how to build and use a dynamic navigation space made of NavMesh surfaces and segment-to-segment connections.","displayName":"Build And Connect NavMesh Surfaces"}],"repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.ai.navigation.git","type":"git","revision":"21cc07be635247d730f8d1ef7c1987e222159a45"},"unityRelease":"0a16","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.ai.navigation@1.1/manual/index.html","name":"com.unity.ai.navigation","version":"1.1.3","displayName":"AI Navigation","description":"High-level NavMesh components for building and using NavMeshes at runtime and at edit time.","dependencies":{"com.unity.modules.ai":"1.0.0"},"dist":{"shasum":"2f923f88fec5068372e16f5d1b2e51028593d30a","tarball":"https://download.packages.unity.com/com.unity.ai.navigation/-/com.unity.ai.navigation-1.1.3.tgz"}},"1.1.1":{"type":"asset","unity":"2022.2","upmCi":{"footprint":"e3ad0ebea85060d96f669bbec07cad10db6bd865"},"samples":[{"path":"Samples~","description":"A set of examples on how to build and use a dynamic navigation space made of NavMesh surfaces and segment-to-segment connections.","displayName":"Build And Connect NavMesh Surfaces"}],"repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.ai.navigation.git","type":"git","revision":"68f64fce84ec1c6721cae1231d5cf4003494eb08"},"name":"com.unity.ai.navigation","version":"1.1.1","displayName":"AI Navigation","description":"High-level NavMesh components for building and using NavMeshes at runtime and at edit time.","dependencies":{"com.unity.modules.ai":"1.0.0"},"dist":{"shasum":"56ef8aa09e727099a7d003260b58918e8949b8db","tarball":"https://download.packages.unity.com/com.unity.ai.navigation/-/com.unity.ai.navigation-1.1.1.tgz"}},"1.1.0-pre.2":{"type":"asset","unity":"2022.2","upmCi":{"footprint":"526244f79b5f00b086741c1f3c0d966202b44fac"},"samples":[{"path":"Samples~","description":"A set of examples on how to build and use a dynamic navigation space made of NavMesh surfaces and segment-to-segment connections.","displayName":"Build And Connect NavMesh Surfaces"}],"repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.ai.navigation.git","type":"git","revision":"13be26433bbb092a0bef77f72cb0690b87de6bf6"},"name":"com.unity.ai.navigation","version":"1.1.0-pre.2","displayName":"AI Navigation","description":"High-level NavMesh components for building and using NavMeshes at runtime and at edit time.","dependencies":{"com.unity.modules.ai":"1.0.0"},"dist":{"shasum":"0eb14789bb07ffcfa1eeec783df578ea3b50b41c","tarball":"https://download.packages.unity.com/com.unity.ai.navigation/-/com.unity.ai.navigation-1.1.0-pre.2.tgz"}},"1.1.0-pre.1":{"_id":"com.unity.ai.navigation@1.1.0-pre.1","_upm":{"changelog":"### Added\r\n* NavMeshSurface supports links generation.\r\n* NavMeshSurface supports HeightMesh baking.\r\n* New package Navigation window adapting the obsolete Unity Navigation window functionalities to the package workflow.\r\n\r\n### Changed\r\n* NavMeshSurface is using the _Background Tasks_ window to report the baking progress\r\n* Minimum supported version is increased to Unity 2022.2"},"type":"asset","_from":"file:/tmp/com.unity.ai.navigation@1.1.0-pre.1-qevhjez1.tgz","unity":"2022.2","upmCi":{"footprint":"a0c542ab7c924f88c3b069d7d71778ea4268f9ea"},"samples":[{"path":"Samples~","description":"A set of examples on how to build and use a dynamic navigation space made of NavMesh surfaces and segment-to-segment connections.","displayName":"Build And Connect NavMesh Surfaces"}],"_resolved":"/tmp/com.unity.ai.navigation@1.1.0-pre.1-qevhjez1.tgz","_integrity":"sha512-h3A2qVtTM/ZNkDXduqN0FoAgUBdjMcSrH+gna3jdCAVxuQM8aF7asB0aTopUIQdb9xdXiv7aVfmTw3p3tLlWPw==","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.ai.navigation.git","type":"git","revision":"84a190aae72d65c721ed1f3698ea3c2fb58cd6bd"},"_npmVersion":"7.5.2","_nodeVersion":"12.22.5","name":"com.unity.ai.navigation","version":"1.1.0-pre.1","displayName":"AI Navigation","description":"High-level NavMesh components for building and using NavMeshes at runtime and at edit time.","dependencies":{"com.unity.modules.ai":"1.0.0"},"dist":{"shasum":"fd68e447f77f9fb61f2bf8186f032b3b981cedb4","tarball":"https://download.packages.unity.com/com.unity.ai.navigation/-/com.unity.ai.navigation-1.1.0-pre.1.tgz"}},"1.0.0-exp.4":{"_id":"com.unity.ai.navigation@1.0.0-exp.4","type":"asset","_from":"file:com.unity.ai.navigation-1.0.0-exp.4.tgz","unity":"2019.4","upmCi":{"footprint":"6212939d0fb9194fb2a5405afef874ea4e3f6dd5"},"readme":"# Components for Runtime NavMesh Building\r\n\r\nHere we introduce four components for the navigation system:\r\n\r\n* __NavMeshSurface__ – for building and enabling a NavMesh surface for one agent type.\r\n* __NavMeshModifier__ – affects the NavMesh generation of NavMesh area types, based on the transform hierarchy.\r\n* __NavMeshModifierVolume__ – affects the NavMesh generation of NavMesh area types, based on volume.\r\n* __NavMeshLink__ – connects same or different NavMesh surfaces for one agent type.\r\n\r\nThese components comprise the high level controls for building and using NavMeshes at runtime as well as edit time.\r\n\r\nDetailed information can be found in the [Documentation](Documentation~).\r\n\r\n# FAQ\r\n\r\nQ: Can I bake a NavMesh at runtime?  \r\nA: Yes.\r\n\r\nQ: Can I use NavMesh'es for more than one agent size?  \r\nA: Yes.\r\n\r\nQ: Can I put a NavMesh in a prefab?  \r\nA: Yes - with some limitations.\r\n\r\nQ: How do I connect two NavMesh surfaces?  \r\nA: Use the NavMeshLink to connect the two sides.\r\n\r\nQ: How do I query the NavMesh for one specific size of agent?  \r\nA: Use the NavMeshQuery filter when querying the NavMesh.\r\n\r\nQ: What's the deal with the 'DefaultExecutionOrder' attribute?  \r\nA: It gives a way of controlling the order of execution of scripts - specifically it allows us to build a NavMesh before the\r\n(native) NavMeshAgent component is enabled.\r\n\r\nQ: What's the use of the new delegate 'NavMesh.onPreUpdate'?  \r\nA: It allows you to hook in to controlling the NavMesh data and links set up before the navigation update loop is called on the native side.\r\n\r\nQ: Can I do moving NavMesh platforms?  \r\nA: No - new API is required for consistently moving platforms carrying agents.\r\n\r\nQ: Is OffMeshLink now obsolete?  \r\nA: No - you can still use OffMeshLink - however you'll find that NavMeshLink is more flexible and have less overhead.\r\n\r\nQ: What happened to HeightMesh and Auto Generated OffMeshLinks?  \r\nA: They're not supported in the new NavMesh building feature. HeightMesh will be added at some point. Auto OffMeshLink generation will possibly be replaced with a solution that allows better control of placement.\r\n\r\n# Notice on the Change of License\r\n\r\nWith effect from 8th December 2020 this package is [licensed](LICENSE.md) under the [Unity Companion License](https://unity3d.com/legal/licenses/unity_companion_license) for Unity-dependent projects. Prior to the 8th December 2020 this package was licensed under MIT and all use of the package content prior to 8th December 2020 is licensed under MIT.\r\n","samples":[{"path":"Samples~","description":"A set of examples on how to build and use a dynamic navigation space made of NavMesh surfaces and segment-to-segment connections.","displayName":"Build And Connect NavMesh Surfaces"}],"_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.ai.navigation.git","type":"git","revision":"e38a28933e4513afa2b6084c2948852bd9daad56"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.ai.navigation","version":"1.0.0-exp.4","displayName":"AI Navigation","description":"High-level NavMesh components for building and using NavMeshes at runtime and at edit time.","dependencies":{"com.unity.modules.ai":"1.0.0"},"dist":{"shasum":"ae866bb8c0b7f0fd0518e0ca73b888b4ff2efe74","tarball":"https://download.packages.unity.com/com.unity.ai.navigation/-/com.unity.ai.navigation-1.0.0-exp.4.tgz"}},"1.0.0-exp.3":{"_id":"com.unity.ai.navigation@1.0.0-exp.3","type":"asset","_from":"file:com.unity.ai.navigation-1.0.0-exp.3.tgz","unity":"2019.4","upmCi":{"footprint":"ea18b6048cd17da4ba59cf5b33e7e3dba2ad7482"},"readme":"# Components for Runtime NavMesh Building\r\n\r\nHere we introduce four components for the navigation system:\r\n\r\n* __NavMeshSurface__ – for building and enabling a NavMesh surface for one agent type.\r\n* __NavMeshModifier__ – affects the NavMesh generation of NavMesh area types, based on the transform hierarchy.\r\n* __NavMeshModifierVolume__ – affects the NavMesh generation of NavMesh area types, based on volume.\r\n* __NavMeshLink__ – connects same or different NavMesh surfaces for one agent type.\r\n\r\nThese components comprise the high level controls for building and using NavMeshes at runtime as well as edit time.\r\n\r\nDetailed information can be found in the [Documentation](Documentation~) section or in the [NavMesh building components](https://docs.unity3d.com/Manual/NavMesh-BuildingComponents.html) section of the Unity Manual.\r\n\r\n# FAQ\r\n\r\nQ: Can I bake a NavMesh at runtime?  \r\nA: Yes.\r\n\r\nQ: Can I use NavMesh'es for more than one agent size?  \r\nA: Yes.\r\n\r\nQ: Can I put a NavMesh in a prefab?  \r\nA: Yes - with some limitations.\r\n\r\nQ: How do I connect two NavMesh surfaces?  \r\nA: Use the NavMeshLink to connect the two sides.\r\n\r\nQ: How do I query the NavMesh for one specific size of agent?  \r\nA: Use the NavMeshQuery filter when querying the NavMesh.\r\n\r\nQ: What's the deal with the 'DefaultExecutionOrder' attribute?  \r\nA: It gives a way of controlling the order of execution of scripts - specifically it allows us to build a NavMesh before the\r\n(native) NavMeshAgent component is enabled.\r\n\r\nQ: What's the use of the new delegate 'NavMesh.onPreUpdate'?  \r\nA: It allows you to hook in to controlling the NavMesh data and links set up before the navigation update loop is called on the native side.\r\n\r\nQ: Can I do moving NavMesh platforms?  \r\nA: No - new API is required for consistently moving platforms carrying agents.\r\n\r\nQ: Is OffMeshLink now obsolete?  \r\nA: No - you can still use OffMeshLink - however you'll find that NavMeshLink is more flexible and have less overhead.\r\n\r\nQ: What happened to HeightMesh and Auto Generated OffMeshLinks?  \r\nA: They're not supported in the new NavMesh building feature. HeightMesh will be added at some point. Auto OffMeshLink generation will possibly be replaced with a solution that allows better control of placement.\r\n\r\n# Notice on the Change of License\r\n\r\nWith effect from 8th December 2020 this package is [licensed](LICENSE.md) under the [Unity Companion License](https://unity3d.com/legal/licenses/unity_companion_license) for Unity-dependent projects. Prior to the 8th December 2020 this package was licensed under MIT and all use of the package content prior to 8th December 2020 is licensed under MIT.\r\n","samples":[{"path":"Samples~","description":"A set of examples on how to build and use a dynamic navigation space made of NavMesh surfaces and segment-to-segment connections.","displayName":"Build And Connect NavMesh Surfaces"}],"_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.ai.navigation.git","type":"git","revision":"071ef1f302fe6614384baa04253a74ad90b213b9"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.ai.navigation","version":"1.0.0-exp.3","displayName":"AI Navigation","description":"High-level NavMesh components for building and using NavMeshes at runtime and at edit time.","dependencies":{"com.unity.modules.ai":"1.0.0"},"dist":{"shasum":"b7ca01c92eff30c09fca30c3584a8ba6534e8a41","tarball":"https://download.packages.unity.com/com.unity.ai.navigation/-/com.unity.ai.navigation-1.0.0-exp.3.tgz"}},"1.0.0-exp.2":{"_id":"com.unity.ai.navigation@1.0.0-exp.2","type":"asset","_from":"file:com.unity.ai.navigation-1.0.0-exp.2.tgz","unity":"2019.4","upmCi":{"footprint":"a3e01e2bd7d9af1ff95ef7b9aaae87296376aaa5"},"readme":"# Components for Runtime NavMesh Building\r\n\r\nHere we introduce four components for the navigation system:\r\n\r\n* __NavMeshSurface__ – for building and enabling a NavMesh surface for one agent type.\r\n* __NavMeshModifier__ – affects the NavMesh generation of NavMesh area types, based on the transform hierarchy.\r\n* __NavMeshModifierVolume__ – affects the NavMesh generation of NavMesh area types, based on volume.\r\n* __NavMeshLink__ – connects same or different NavMesh surfaces for one agent type.\r\n\r\nThese components comprise the high level controls for building and using NavMeshes at runtime as well as edit time.\r\n\r\nDetailed information can be found in the [Documentation](Documentation~) section or in the [NavMesh building components](https://docs.unity3d.com/Manual/NavMesh-BuildingComponents.html) section of the Unity Manual.\r\n\r\n# FAQ\r\n\r\nQ: Can I bake a NavMesh at runtime?  \r\nA: Yes.\r\n\r\nQ: Can I use NavMesh'es for more than one agent size?  \r\nA: Yes.\r\n\r\nQ: Can I put a NavMesh in a prefab?  \r\nA: Yes - with some limitations.\r\n\r\nQ: How do I connect two NavMesh surfaces?  \r\nA: Use the NavMeshLink to connect the two sides.\r\n\r\nQ: How do I query the NavMesh for one specific size of agent?  \r\nA: Use the NavMeshQuery filter when querying the NavMesh.\r\n\r\nQ: What's the deal with the 'DefaultExecutionOrder' attribute?  \r\nA: It gives a way of controlling the order of execution of scripts - specifically it allows us to build a NavMesh before the\r\n(native) NavMeshAgent component is enabled.\r\n\r\nQ: What's the use of the new delegate 'NavMesh.onPreUpdate'?  \r\nA: It allows you to hook in to controlling the NavMesh data and links set up before the navigation update loop is called on the native side.\r\n\r\nQ: Can I do moving NavMesh platforms?  \r\nA: No - new API is required for consistently moving platforms carrying agents.\r\n\r\nQ: Is OffMeshLink now obsolete?  \r\nA: No - you can still use OffMeshLink - however you'll find that NavMeshLink is more flexible and have less overhead.\r\n\r\nQ: What happened to HeightMesh and Auto Generated OffMeshLinks?  \r\nA: They're not supported in the new NavMesh building feature. HeightMesh will be added at some point. Auto OffMeshLink generation will possibly be replaced with a solution that allows better control of placement.\r\n\r\n# Notice on the Change of License\r\n\r\nWith effect from 8th December 2020 this package is [licensed](LICENSE.md) under the [Unity Companion License](https://unity3d.com/legal/licenses/unity_companion_license) for Unity-dependent projects. Prior to the 8th December 2020 this package was licensed under MIT and all use of the package content prior to 8th December 2020 is licensed under MIT.\r\n","samples":[{"path":"Samples~","description":"A set of examples on how to build and use a dynamic navigation space made of NavMesh surfaces and segment-to-segment connections.","displayName":"Build And Connect NavMesh Surfaces"}],"_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.ai.navigation.git","type":"git","revision":"ec4274b0ba88dc262aa870edd3c80399faf74506"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.ai.navigation","version":"1.0.0-exp.2","displayName":"AI Navigation","description":"High-level NavMesh components for building and using NavMeshes at runtime and at edit time.","dependencies":{"com.unity.modules.ai":"1.0.0"},"dist":{"shasum":"990b92d4fa7f6c8c7b8a60dd738b02bf3bbd9019","tarball":"https://download.packages.unity.com/com.unity.ai.navigation/-/com.unity.ai.navigation-1.0.0-exp.2.tgz"}}},"time":{"2.0.6":"2025-02-06T12:46:59.920Z","2.0.5":"2024-11-18T12:04:51.694Z","2.0.4":"2024-08-29T22:32:38.427Z","2.0.3":"2024-07-26T10:07:01.000Z","2.0.0":"2023-10-19T09:54:05.000Z","1.1.5":"2023-10-03T13:43:05.000Z","2.0.0-pre.4":"2023-09-29T21:02:25.000Z","1.1.4":"2023-06-15T10:30:10.000Z","2.0.0-pre.3":"2023-06-01T14:02:33.000Z","1.1.3":"2023-04-17T11:01:30.000Z","1.1.1":"2022-10-25T18:50:03.000Z","1.1.0-pre.2":"2022-08-12T14:37:45.000Z","1.1.0-pre.1":"2022-05-25T18:27:08.000Z","1.0.0-exp.4":"2021-07-29T18:47:20.000Z","1.0.0-exp.3":"2021-06-17T14:40:07.000Z","1.0.0-exp.2":"2021-06-09T15:31:56.000Z"},"dist-tags":{"latest":"2.0.6"},"etag":"\"9f8c-J+0l664LM8fvzgD8l4SlBuqzTCA\""}